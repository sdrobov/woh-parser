stages:
  - build
  - deploy

.dev_template:
  environment: &dev_env
    name: dev
    url: http://dev.woh.ru
  variables: &dev_variables
    TAG: latest
    HOST: dev.woh.ru

.beta_template:
  environment: &beta_env
    name: beta
    url: http://beta.woh.ru
  variables: &beta_variables
    TAG: stable
    HOST: beta.woh.ru

.build_template: &common_build
  stage: build
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
    - docker build -t registry.gitlab.com/woh/parser:$TAG .
    - docker push registry.gitlab.com/woh/parser:$TAG

.deploy_template: &common_deploy
  stage: deploy
  image: kroniak/ssh-client
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$DEPLOY_SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh deploy@$HOST "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com"
    - ssh deploy@$HOST "docker pull registry.gitlab.com/woh/parser:$TAG"
    - ssh deploy@$HOST "docker container stop woh-parser; sleep 1; docker run --name woh-parser --rm --add-host db.localhost:172.17.0.1 --env-file /home/deploy/woh-parser.env -d -p 3001:3000 registry.gitlab.com/woh/parser:$TAG"

build dev:
  <<: *common_build
  variables: *dev_variables
  environment: *dev_env
  only:
    - develop

deploy dev:
  <<: *common_deploy
  variables: *dev_variables
  environment: *dev_env
  only:
    - develop

build beta:
  <<: *common_build
  variables: *beta_variables
  environment: *beta_env
  only:
    - master

deploy beta:
  <<: *common_deploy
  variables: *beta_variables
  environment: *beta_env
  only:
    - master
